{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","selectedMonth","setSelectedMonth","isSelecting","setIsSelecting","months","range","length","getRandomMonth","index","Math","floor","random","className","color","type","onClick","setTimeout","randomMonth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA6CeA,MAzCf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACNC,EADM,KACSC,EADT,OAEyBF,oBAAS,GAFlC,mBAENG,EAFM,KAEOC,EAFP,KAGPC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,YAC5GC,EAAQD,EAAOE,OAYfC,EAAiB,WACrB,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,UAAYN,EAAQ,IAClD,OAAOD,EAAOI,IAGhB,OACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sFAEF,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,iBAAf,SACGV,EACC,cAAC,aAAD,CAAYW,MAAM,YAClB,4BACGb,MAIP,wBAAQc,KAAK,SAASC,QA7BH,WACvBZ,GAAe,GACfF,EAAiB,IACjBe,YAAW,WACT,IAAMC,EAAcV,IACpBN,EAAiBgB,GACjBd,GAAe,KACd,OAsBC,SAAiD,8DC3B1Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc95eb3f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { PuffLoader } from 'react-spinners';\nimport './App.css';\n\nfunction App() {\n  const [selectedMonth, setSelectedMonth] = useState('')\n  const [isSelecting, setIsSelecting] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\"]\n  const range = months.length;\n\n  const selectMonthClick = () => {\n    setIsSelecting(true)\n    setSelectedMonth('')\n    setTimeout(() => {\n      const randomMonth = getRandomMonth();\n      setSelectedMonth(randomMonth);\n      setIsSelecting(false);\n    }, 1500);\n  }\n\n  const getRandomMonth = () => {\n    const index = Math.floor(Math.random() * (range - 1))\n    return months[index];\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-message\">\n        <p>Pick a month and remember what you're grateful for.</p>\n      </div>\n      <header className=\"App-header\">\n        <div className=\"selected-month\">\n          {isSelecting ?\n            <PuffLoader color=\"#d029d2\" /> :\n            <p>\n              {selectedMonth}\n            </p>\n          }\n        </div>\n        <button type=\"button\" onClick={selectMonthClick}><span>Choose your month</span></button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}